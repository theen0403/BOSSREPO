@model BOSS.Models.FMmodels.FMResCenterModels.DepartmentModel
@{
    BOSSEFConnectionString BOSSDB = new BOSSEFConnectionString();
}
@using BOSS.Models;


@using (Ajax.BeginForm("UpdateDepartment", "FileMaintenanceResponsibility", new AjaxOptions { OnSuccess = "GlobalAlertsCallingwoModal( 'GetDepartmentDT','Successfully Updated!')", OnFailure = "", }))
{
    @Html.HiddenFor(m => m.DeptID, new { })

    <div class="row mt-1">
        <div class="col-xl-4 col-lg-6 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-2 mt-md-2">Department</label>
                @Html.TextAreaFor(m => m.getDeptColumns.DeptTitle, new { @class = "form-control", @rows = 1, id = "DeptTitle" })
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin">Department Abbreviation</label>
                @Html.TextBoxFor(m => m.getDeptColumns.DeptAbbrv, new { @class = "form-control", type = "text", id = "DeptAbbrv" })
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin">Responsibility Center Code</label>
                @Html.TextBoxFor(m => m.getDeptColumns.RCcode, new { @class = "form-control", type = "text", id = "RCcode" })
            </div>
        </div>
        <div class="col-xl-4 col-lg-4 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2">Fund</label>
                <span class="input-group-append">
                    @Html.DropDownListFor(m => m.FundID, Model.FundTypeList, new { @class = "form-control select2nosearch" })
                    <button type="button" class="btn btn-warning btn-sm m-left" data-toggle="modal" data-target="#ViewAddFundDeptModal" onclick="GetAddFundModalDept()"><strong>+</strong></button>
                </span>
            </div>
        </div>
        <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 ">Sector</label>
                <span class="input-group-append">
                    @Html.DropDownListFor(m => m.SectorID, Model.SectorList, new { @class = "form-control select2", id = "SecID", onchange = "LoadGetDynamicSubSector()" })
                    <button type="button" class="btn btn-warning btn-sm m-left" data-toggle="modal" data-target="#ViewAddSectorDeptModal" onclick="GetAddSectorModalDept()"><strong>+</strong></button>
                </span>
            </div>
        </div>
        <div class="col-xl-4 col-lg-4 col-md-5 mt-lg-0 mt-xl-2  mt-md-2" id="SubSectorID">

        </div>
        <div class="col-xl-3 col-lg-3 col-md-4">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-2 mt-md-2">Office Type</label>
                <span class="input-group-append">
                    @Html.DropDownListFor(m => m.OfficeTypeID, Model.officeTypeList, new { @class = "form-control select2" })
                    <button type="button" class="btn btn-warning btn-sm m-left" data-toggle="modal" onclick="GetAddOfficeTypeModal()"><strong>+</strong></button>
                </span>
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin">Department / Office Code</label>
                @Html.TextBoxFor(m => m.getDeptColumns.DeptOfficeCode, new { @class = "form-control", type = "text", id = "DeptOfficeCode" })
            </div>
        </div>
        <div class="col-xl-12 col-lg-6">
            <div class="form-group mt-xl-0 mt-lg-3">
                <button type="button" class="btn btn-menuRed btn-min-width float-right ml-1" onclick="GetDepartmentDT()">
                    Cancel
                </button>
                <button type="submit" class="btn btn-btnbackcolor btn-min-width float-right">
                    Update
                </button>
            </div>
        </div>
    </div>
}
<script>
    $(function () {
        LoadICheck();
        LoadGetDynamicSubSector();
    })
    function LoadGetDynamicSubSector() {
        GetAddDynamicSubSector();
    }
</script>

