@model BOSS.Models.FMAccounts.GeneralAccountsModel
@{
    BOSSEFConnectionString BOSSDB = new BOSSEFConnectionString();
}
@using BOSS.Models;



@using (Ajax.BeginForm("AddNewGenAcct", "FileMaintenanceAccounts", new AjaxOptions { OnSuccess = "GlobalAlertsCallingwoModal('GetGeneralAccountDT','Successfully Added!')", OnFailure = "", }))
{
    @Html.HiddenFor(m => m.allotTempID, new { id = "Tempallot" })
<div class="row mt-1 ">
    <div class="col-xl-1 col-lg-1 col-md-1">
    </div>
    <div class="col-xl-4 col-lg-3 col-md-3" id="dynamicAllotmentID">

    </div>
    <div class="col-xl-2 col-lg-3 col-md-3">
        @*offset-md-4*@
        <div class="form-group ">
            <label class="custom-form-margin">Account Code</label>
            @Html.TextBoxFor(m => m.getGenAcctColumns.GenAccountCode, new { @class = "form-control", type = "text", id = "GenAccountCode" })
        </div>
    </div>
    <div class="col-xl-4 col-lg-4 col-md-4">
        <div class="form-group ">
            <label class="custom-form-margin">Account Title</label>
            @Html.TextAreaFor(m => m.getGenAcctColumns.GenAccountTitle, new { @class = "form-control", @rows = 1, type = "text", id = "GenAccountTitle" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-1 col-md-1">
    </div>
    @Html.TextBoxFor(m => m.isReserve, new { id = "isReserveID", @class = "hidden" })
    <div class="col-lg-2 col-md-2 mt-0">
        <div class="form-group">
            <label class="custom-form-margin">With Reserve?</label>
            <select class="form-control select2nosearch" id="isReserveIDD" onchange="isReserveOnChange()">
                <option value="0">Yes</option>
                <option value="1">No</option>
            </select>
        </div>
    </div>
    <div class="col-lg-2 col-md-2">
        <div class="form-group">
            <label class="custom-form-margin">Reserved %</label>
            <fieldset>
                @Html.TextBoxFor(m => m.getGenAcctColumns.ReservePercent, new { @class = "form-control", type = "text", id = "ReservePercent" })
            </fieldset>
        </div>
    </div>
    @Html.TextBoxFor(m => m.isFullRelease, new { id = "isFullReleaseID", @class = "hidden" })
    <div class="col-lg-2 col-md-2">
        <div class="form-group">
            <label class="custom-form-margin">For Full Release?</label>
            <select class="form-control select2nosearch" id="isFullReleaseIDD" onchange="isFullReleaseOnChange()">
                <option value="0">Yes</option>
                <option value="1">No</option>
            </select>
        </div>
    </div>
    @Html.TextBoxFor(m => m.isContinuing, new { id = "isContinuingID", @class = "hidden" })
    <div class="col-lg-2 col-md-2">
        <div class="form-group">
            <label class="custom-form-margin">For Continuing?</label>
            <select class="form-control select2nosearch" id="isContinuingIDD" onchange="isContinuingOnChange()">
                <option value="0">Yes</option>
                <option value="1">No</option>
            </select>
        </div>
    </div>
    @Html.TextBoxFor(m => m.isOBRCashAdvance, new { id = "isOBRCashAdvanceID", @class = "hidden" }) 
    <div class="col-lg-2 col-md-2">
        <div class="form-group">
            <label class="custom-form-margin">OBR Cash Adv?</label>
            <select class="form-control select2nosearch" id="isOBRCashAdvanceIDD" onchange="isOBRCashAdvanceOnChange()">
                <option value="0">Yes</option>
                <option value="1">No</option>
            </select>
        </div>
    </div>
</div>

    <div class="row mb-1">
        <div class="col form-group">
            <button type="button" class="btn btn-menuRed btn-min-width mr-1 float-right" onclick="GetGeneralAccountDT()">
                Cancel
            </button>
            <button type="submit" class="btn btn-btnbackcolor btn-min-width mr-1 float-right">
                Add
            </button>
        </div>
    </div>
}
<script>
    $(function () {
        GetDynamicAllotmentClass();
        isReserveOnChange();
        isOBRCashAdvanceOnChange();
        isContinuingOnChange();
        isFullReleaseOnChange();
    })
    function isReserveOnChange() {
        var isReserveValue = $("#isReserveIDD").val();
        if (isReserveValue == 0) {
            $("#isReserveID").val(true);
            $("#ReservePercent").removeAttr('disabled');
            $("#ReservePercent").val("");
        } else {
            $("#isReserveID").val(false);
            $("#ReservePercent").attr("disabled", "disabled");
            $("#ReservePercent").val(0);
        }
    }
    function isOBRCashAdvanceOnChange() {
        var isOBRCashAdvanceValue = $("#isOBRCashAdvanceIDD").val();

        if (isOBRCashAdvanceValue == 0) {
            $("#isOBRCashAdvanceID").val(true);
        } else {
            $("#isOBRCashAdvanceID").val(false
            );
        }
    }
    function isContinuingOnChange() {
        var isContinuingValue = $("#isContinuingIDD").val();
        if (isContinuingValue == 0) {
            $("#isContinuingID").val(true);
        } else {
            $("#isContinuingID").val(false);
        }
    }
    function isFullReleaseOnChange() {
        var isFullReleaseValue = $("#isFullReleaseIDD").val();
        if (isFullReleaseValue == 0) {
            $("#isFullReleaseID").val(true);
        } else {
            $("#isFullReleaseID").val(false);
        }
    }
</script>