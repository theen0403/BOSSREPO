@model BOSS.Models.FMmodels.FMFundModels.FundModel
@{
    BOSSEFConnectionString BOSSDB = new BOSSEFConnectionString();
}
@using BOSS.Models;
@using (Ajax.BeginForm("UpdateFund", "FileMaintenanceFund", new AjaxOptions { OnSuccess = "GlobalAlertsCallingwoModal( 'GetFundDTable','Successfully Updated!')", OnFailure = "", }))
{
    @Html.HiddenFor(m => m.FundID, new { })
    
        <div class="row">
            <div class="col-xl-2 col-lg-2 col-md-1"></div>
            <div class="col-xl-8 col-lg-8 col-md-10">
                <div class="row ">
                    <div class="col-xl-8 col-lg-8 col-md-8">
                        <div class="form-group">
                            <label class="custom-form-margin">Fund</label>
                            @Html.TextAreaFor(m => m.getFundColumns.FundTitle, new { @class = "form-control", @rows = 1, id = "FundTitle" })
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-4">
                        <div class="form-group">
                            <label class="custom-form-margin">Code</label>
                            @Html.TextBoxFor(m => m.getFundColumns.FundCode, new { @class = "form-control", id = "FundCode" })
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            <button type="button" class="btn btn-menuRed btn-min-width ml-1 float-right" onclick="GetFundDTable()">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-btnbackcolor btn-min-width float-right">
                                Update
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
}