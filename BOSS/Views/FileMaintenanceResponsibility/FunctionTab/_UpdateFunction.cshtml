
@model BOSS.Models.FMmodels.FMResCenterModels.FunctionModel
@{
    BOSSEFConnectionString BOSSDB = new BOSSEFConnectionString();
}
@using BOSS.Models;


@using (Ajax.BeginForm("UpdateFunction", "FileMaintenanceResponsibility", new AjaxOptions { OnSuccess = "GlobalAlertsCallingwoModal('GetFunctionDT','Successfully Updated!')", OnFailure = "", }))
{
    @Html.HiddenFor(m => m.FunctionID, new { })
    @Html.HiddenFor(m => m.subsectorIDHiddenfunc, new { id = "subsectorIDHiddenfunc" })

    <div class="row">
        <div class="col-xl-3 col-lg-6 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-2">Department</label>
                @Html.DropDownListFor(m => m.DeptID, Model.DeptSelectionListfunc, new { @class = "form-control select2", id = "DeptID2", onchange = "LoadDynamic2()" })

            </div>
        </div>
        <div class="col-xl-3 col-lg-3 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-2">Function</label>
                @Html.TextAreaFor(m => m.getFunctionColumns.FunctionTitle, new { @class = "form-control", @rows = 1, id = "FunctionTitle" })
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin">Function Abbreviation</label>
                @Html.TextBoxFor(m => m.getFunctionColumns.FunctionAbbrv, new { @class = "form-control", type = "text", id = "FunctionAbbrv" })
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-0 mt-md-2">Function Code</label>
                @Html.TextBoxFor(m => m.getFunctionColumns.FunctionCode, new { @class = "form-control", type = "text", id = "FunctionCode" })
            </div>
        </div>
        <div class="col-xl-2 col-lg-4 col-md-6 mt-xl-2 mt-lg-0 mt-md-2" id="fundTitleID">

        </div>
        <div class="col-xl-3 col-lg-5 col-md-6">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2">Sector</label>
                @Html.DropDownListFor(m => m.SectorID, Model.SectorListfunc, new { @class = "form-control select2", id = "SectorID2", onchange = "LoadGetDynamicSubSectorfunc3()" })

            </div>
        </div>
        <div class="col-xl-4 col-lg-5 col-md-6 mt-xl-2 mt-lg-2" id="SubSectorfuncID">

        </div>
        <div class="col-xl-3 col-lg-4 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin mt-xl-2 mt-lg-2 mt-md-2">Office Type</label>
                @Html.DropDownListFor(m => m.OfficeTypeID, Model.officeTypeListfunc, new { @class = "form-control select2", id = "OfficeTypeIDfunc" })

            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <div class="form-group">
                <label class="custom-form-margin">Department / Office Code</label>
                @Html.TextBoxFor(m => m.getFunctionColumns.DeptOfficeCodefunc, new { @class = "form-control", type = "text", id = "DeptOfficeCodefunc" })
            </div>
        </div>
        <div class="col-xl-12 col-lg-12 col-md-6">
            <div class="form-group mt-lg-0 mt-md-3">
                <button type="button" class="btn btn-menuRed btn-min-width float-right ml-1" onclick="GetFunctionDT()">
                    Cancel
                </button>
                <button type="submit" class="btn btn-btnbackcolor btn-min-width float-right">
                    Update
                </button>
            </div>
        </div>
    </div>
}
<script>
    $(function () {
        LoadDynamic2();
        LoadICheck();
        LoadGetDynamicSubSectorfunc2();
    })
    function LoadDynamic2() {
        GetFund2();
        GetDeptOfficeCode2();
    }
    function LoadGetDynamicSubSectorfunc2() {
        var SectorID = $("#SectorID2").val();
        var subsectorIDHiddenfunc = $("#subsectorIDHiddenfunc").val();
        GetDynamicSubSectorfunc2(SectorID, subsectorIDHiddenfunc);
    }
    function LoadGetDynamicSubSectorfunc3() {
        GetDynamicSubSectorfunc3();
    }
</script>


